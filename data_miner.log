DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (3.8ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (3.9ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (3.6ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `shipment_records` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE shipment_records with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] no special primary key set on shipment_records, so using 'id'
DEBUG data_miner: [data_miner gem] looks like shipment_records has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN id
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer, "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "shipment_records" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "shipment_records" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("shipment_records")[0m
DEBUG data_miner: [data_miner gem] ran Schema(ShipmentRecord): Define a table called shipment_records with primary key id
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (3.7ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `shipment_records` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE shipment_records with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] no special primary key set on shipment_records, so using 'id'
DEBUG data_miner: [data_miner gem] looks like shipment_records has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN id
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer, "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "shipment_records" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "shipment_records" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("shipment_records")[0m
DEBUG data_miner: [data_miner gem] ran Schema(ShipmentRecord): Define a table called shipment_records with primary key id
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.4ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.5ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.5ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (3.7ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `shipment_records` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE shipment_records with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] no special primary key set on shipment_records, so using 'id'
DEBUG data_miner: [data_miner gem] looks like shipment_records has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN id
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer, "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "shipment_records" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "shipment_records" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("shipment_records")[0m
DEBUG data_miner: [data_miner gem] ran Schema(ShipmentRecord): Define a table called shipment_records with primary key id
DEBUG data_miner:   [1m[35mSQL (0.4ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.5ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `census_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  select sqlite_version(*)
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `census_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `climate_divisions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `countries` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_regions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `egrid_subregions` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `petrolem_districts` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `states` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `urbanities` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `zip_codes` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_prices` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] Database table `fuel_types` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.4ms)[0m  [1mCREATE TABLE "fallbacks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "values" text, "created_at" datetime, "updated_at" datetime) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE census_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like census_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "number" integer[0m
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_census_divisions_number ON census_divisions (number ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_census_divisions" ("data_miner_placeholder" integer, "number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_census_divisions_number" ON "altered_census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "census_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_divisions" ("number" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_census_divisions_number" ON "census_divisions" ("number")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_census_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "census_region_name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_region_number
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "census_region_number" integer[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN meeting_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "meeting_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_natural_gas_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_natural_gas_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_fuel_oil_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_fuel_oil_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_electricity_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_electricity_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN lodging_building_district_heat_intensity_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "lodging_building_district_heat_intensity_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_divisions_number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("census_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_census_divisions_number')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_census_divisions_number"
DEBUG data_miner: [data_miner gem] ran Schema(CensusDivision): Define a table called census_divisions with primary key number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE census_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "census_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like census_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "census_regions" ADD "number" integer
DEBUG data_miner: [data_miner gem] SETTING number AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_census_regions_number ON census_regions (number ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_census_regions" ("data_miner_placeholder" integer, "number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_census_regions_number" ON "altered_census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "census_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "census_regions" ("number" integer) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_census_regions_number" ON "census_regions" ("number")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_census_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "census_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "census_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_census_regions_number
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("census_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_census_regions_number')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_census_regions_number"[0m
DEBUG data_miner: [data_miner gem] ran Schema(CensusRegion): Define a table called census_regions with primary key number
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE climate_divisions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "climate_divisions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like climate_divisions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mALTER TABLE "climate_divisions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_climate_divisions_name ON climate_divisions (name ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_climate_divisions" ("data_miner_placeholder" integer, "name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_climate_divisions_name" ON "altered_climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "climate_divisions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "climate_divisions" ("name" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_climate_divisions_name" ON "climate_divisions" ("name")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_climate_divisions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN heating_degree_days
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "heating_degree_days" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN cooling_degree_days
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "cooling_degree_days" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "state_postal_abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "climate_divisions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "climate_divisions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_climate_divisions_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("climate_divisions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_climate_divisions_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_climate_divisions_name"
DEBUG data_miner: [data_miner gem] ran Schema(ClimateDivision): Define a table called climate_divisions with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE countries with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "countries" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like countries has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "iso_3166_code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING iso_3166_code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_countries_iso_3166_code ON countries (iso_3166_code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_countries" ("data_miner_placeholder" integer, "iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_countries_iso_3166_code" ON "altered_countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "countries"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "countries" ("iso_3166_code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_countries_iso_3166_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("countries")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_countries_iso_3166_code" ON "countries" ("iso_3166_code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_countries"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN flight_route_inefficiency_factor
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "flight_route_inefficiency_factor" float[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "countries" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "countries" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_countries_iso_3166_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("countries")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_countries_iso_3166_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_countries_iso_3166_code"
DEBUG data_miner: [data_miner gem] ran Schema(Country): Define a table called countries with primary key iso_3166_code
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_regions with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_regions" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like egrid_regions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_egrid_regions_name ON egrid_regions (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_egrid_regions" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_egrid_regions_name" ON "altered_egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "egrid_regions"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_regions" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_egrid_regions_name" ON "egrid_regions" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_egrid_regions"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN loss_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "loss_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_regions" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_regions" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_regions_name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("egrid_regions")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_egrid_regions_name')
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP INDEX "IDX_egrid_regions_name"[0m
DEBUG data_miner: [data_miner gem] ran Schema(EgridRegion): Define a table called egrid_regions with primary key name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE egrid_subregions with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "egrid_subregions" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] looks like egrid_subregions has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "abbreviation" varchar(255)[0m
DEBUG data_miner: [data_miner gem] SETTING abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX IDX_egrid_subregions_abbreviation ON egrid_subregions (abbreviation ASC)
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_egrid_subregions" ("data_miner_placeholder" integer, "abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE UNIQUE INDEX "temp_IDX_altered_egrid_subregions_abbreviation" ON "altered_egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "egrid_subregions"
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "egrid_subregions" ("abbreviation" varchar(255)) [0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("altered_egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('temp_IDX_altered_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX "IDX_egrid_subregions_abbreviation" ON "egrid_subregions" ("abbreviation")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_egrid_subregions"
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "electricity_emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN electricity_emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "electricity_emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN nerc_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "nerc_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_region_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "egrid_region_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "egrid_subregions" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "egrid_subregions" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_egrid_subregions_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("egrid_subregions")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_egrid_subregions_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_egrid_subregions_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(EgridSubregion): Define a table called egrid_subregions with primary key abbreviation
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_prices with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "fuel_prices" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_prices has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  ALTER TABLE "fuel_prices" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_prices_name ON fuel_prices (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_prices" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_prices_name" ON "altered_fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_prices"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_prices" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_prices_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_prices")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_prices_name" ON "fuel_prices" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_prices"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN price
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "price" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN price_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "price_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_prices" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_prices" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_prices_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_prices")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_prices_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_prices_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelPrice): Define a table called fuel_prices with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE fuel_types with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TABLE "fuel_types" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like fuel_types has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_fuel_types_name ON fuel_types (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_fuel_types" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_fuel_types_name" ON "altered_fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "fuel_types"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "fuel_types" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_fuel_types_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("fuel_types")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_fuel_types_name" ON "fuel_types" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_fuel_types"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "emission_factor" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN emission_factor_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "emission_factor_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN density
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "density" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN density_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "density_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "average_purchase_volume" float
DEBUG data_miner: [data_miner gem] ADDING COLUMN average_purchase_volume_units
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "average_purchase_volume_units" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "fuel_types" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "fuel_types" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_fuel_types_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("fuel_types")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_fuel_types_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_fuel_types_name"
DEBUG data_miner: [data_miner gem] ran Schema(FuelType): Define a table called fuel_types with primary key name
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE petrolem_districts with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "petrolem_districts" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like petrolem_districts has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "code" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING code AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_petrolem_districts_code ON petrolem_districts (code ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_petrolem_districts" ("data_miner_placeholder" integer, "code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_petrolem_districts_code" ON "altered_petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "petrolem_districts"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "petrolem_districts" ("code" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_petrolem_districts_code')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("petrolem_districts")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_petrolem_districts_code" ON "petrolem_districts" ("code")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_petrolem_districts"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "district_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN district_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "district_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "subdistrict_code" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN subdistrict_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "subdistrict_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "petrolem_districts" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "petrolem_districts" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_petrolem_districts_code
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("petrolem_districts")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_petrolem_districts_code')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_petrolem_districts_code"
DEBUG data_miner: [data_miner gem] ran Schema(PetroleumAdministrationForDefenseDistrict): Define a table called petrolem_districts with primary key code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE states with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "states" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like states has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING postal_abbreviation AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_states_postal_abbreviation ON states (postal_abbreviation ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_states" ("data_miner_placeholder" integer, "postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_info('IDX_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_states_postal_abbreviation" ON "altered_states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "states"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "states" ("postal_abbreviation" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_states_postal_abbreviation')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("states")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_states_postal_abbreviation" ON "states" ("postal_abbreviation")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_states"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN fips_code
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "fips_code" integer
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN census_division_number
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "census_division_number" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN petroleum_administration_for_defense_district_code
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "petroleum_administration_for_defense_district_code" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "states" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "states" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_states_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("states")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_states_postal_abbreviation')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_states_postal_abbreviation"
DEBUG data_miner: [data_miner gem] ran Schema(State): Define a table called states with primary key postal_abbreviation
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE urbanities with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "urbanities" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like urbanities has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_urbanities_name ON urbanities (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_urbanities" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_urbanities_name" ON "altered_urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "urbanities"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "urbanities" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_urbanities_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("urbanities")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_urbanities_name" ON "urbanities" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_urbanities"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "urbanities" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "urbanities" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_urbanities_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("urbanities")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_urbanities_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_urbanities_name"
DEBUG data_miner: [data_miner gem] ran Schema(Urbanity): Define a table called urbanities with primary key name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner: [data_miner gem] CREATING TABLE zip_codes with {:id=>false}
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE TABLE "zip_codes" ("data_miner_placeholder" integer) [0m
DEBUG data_miner: [data_miner gem] looks like zip_codes has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN name
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "name" varchar(255)
DEBUG data_miner: [data_miner gem] SETTING name AS PRIMARY KEY
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mCREATE UNIQUE INDEX IDX_zip_codes_name ON zip_codes (name ASC)[0m
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TEMPORARY TABLE "altered_zip_codes" ("data_miner_placeholder" integer, "name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('IDX_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE UNIQUE INDEX "temp_IDX_altered_zip_codes_name" ON "altered_zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "zip_codes"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "zip_codes" ("name" varchar(255)) 
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_list("altered_zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_info('temp_IDX_altered_zip_codes_name')
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("zip_codes")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE UNIQUE INDEX "IDX_zip_codes_name" ON "zip_codes" ("name")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "altered_zip_codes"[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN state_postal_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "state_postal_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN description
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "description" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN latitude
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m  ALTER TABLE "zip_codes" ADD "latitude" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN longitude
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "longitude" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN egrid_subregion_abbreviation
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "egrid_subregion_abbreviation" varchar(255)
DEBUG data_miner: [data_miner gem] ADDING COLUMN climate_division_name
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "climate_division_name" varchar(255)[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "zip_codes" ADD "updated_at" datetime
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "zip_codes" ADD "created_at" datetime[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner: [data_miner gem] REMOVING INDEX IDX_zip_codes_name
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  PRAGMA index_list("zip_codes")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mPRAGMA index_info('IDX_zip_codes_name')[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP INDEX "IDX_zip_codes_name"
DEBUG data_miner: [data_miner gem] ran Schema(ZipCode): Define a table called zip_codes with primary key name
DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] Database table `shipment_records` doesn't exist. It might be created in the data_miner block, but if it's not, DataMiner probably won't work properly until you run a migration or otherwise fix the schema.
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner: [data_miner gem] CREATING TABLE shipment_records with {:id=>false}
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer) 
DEBUG data_miner: [data_miner gem] no special primary key set on shipment_records, so using 'id'
DEBUG data_miner: [data_miner gem] looks like shipment_records has a bad (or missing) primary key
DEBUG data_miner: [data_miner gem] ADDING COLUMN id
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("data_miner_placeholder" integer, "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] REMOVING COLUMN data_miner_placeholder
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mCREATE TEMPORARY TABLE "altered_shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "data_miner_placeholder" integer) [0m
DEBUG data_miner:   [1m[35mSQL (0.0ms)[0m  PRAGMA index_list("shipment_records")
DEBUG data_miner:   [1m[36mSQL (0.1ms)[0m  [1mDROP TABLE "shipment_records"[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  CREATE TABLE "shipment_records" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL) 
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("altered_shipment_records")[0m
DEBUG data_miner:   [1m[35mSQL (0.1ms)[0m  DROP TABLE "altered_shipment_records"
DEBUG data_miner: [data_miner gem] ADDING COLUMN updated_at
DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1mALTER TABLE "shipment_records" ADD "updated_at" datetime[0m
DEBUG data_miner: [data_miner gem] ADDING COLUMN created_at
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m  ALTER TABLE "shipment_records" ADD "created_at" datetime
DEBUG data_miner:   [1m[36mSQL (0.0ms)[0m  [1mPRAGMA index_list("shipment_records")[0m
DEBUG data_miner: [data_miner gem] ran Schema(ShipmentRecord): Define a table called shipment_records with primary key id
DEBUG data_miner:   [1m[35mSQL (0.3ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.3ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

DEBUG data_miner:   [1m[36mSQL (0.2ms)[0m  [1m SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'
[0m
DEBUG data_miner:   [1m[35mSQL (0.2ms)[0m   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

